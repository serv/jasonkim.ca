{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/services/stores.ts","../../src/components/Button/Button.svelte","../../src/components/History/History.svelte","../../src/components/ButtonGroup/ButtonGroup.svelte","../../src/components/TextField/Input.svelte","../../node_modules/lodash-es/_freeGlobal.js","../../node_modules/lodash-es/_root.js","../../node_modules/lodash-es/_Symbol.js","../../node_modules/lodash-es/_getRawTag.js","../../node_modules/lodash-es/_objectToString.js","../../node_modules/lodash-es/_baseGetTag.js","../../node_modules/lodash-es/isSymbol.js","../../node_modules/lodash-es/isObjectLike.js","../../node_modules/lodash-es/isArray.js","../../node_modules/lodash-es/_baseToString.js","../../node_modules/lodash-es/_arrayMap.js","../../node_modules/lodash-es/_trimmedEndIndex.js","../../node_modules/lodash-es/_baseTrim.js","../../node_modules/lodash-es/isObject.js","../../node_modules/lodash-es/toNumber.js","../../node_modules/lodash-es/toFinite.js","../../node_modules/lodash-es/toInteger.js","../../node_modules/lodash-es/toString.js","../../node_modules/lodash-es/_createRound.js","../../node_modules/lodash-es/round.js","../../node_modules/lodash-es/uniqueId.js","../../src/components/TextField/TextField.svelte","../../src/components/MortgageLength/MortgageLength.svelte","../../src/components/Select/Select.svelte","../../src/components/MonthSelect/MonthSelect.svelte","../../src/components/YearTextField/YearTextField.svelte","../../src/components/MortgageStartMonthYear/MortgageStartMonthYear.svelte","../../src/components/InterestRate/InterestRate.svelte","../../src/components/DownPayment/DownPayment.svelte","../../node_modules/nanoid/index.browser.js","../../src/models/Mortgage.ts","../../node_modules/dayjs/dayjs.min.js","../../node_modules/amortizationjs/dist/models/PaymentTotal.js","../../node_modules/amortizationjs/dist/utils/to-fixed.js","../../node_modules/amortizationjs/dist/models/Payment.js","../../node_modules/amortizationjs/dist/Calculator.js","../../node_modules/amortizationjs/dist/models/Loan.js","../../node_modules/amortizationjs/dist/index.js","../../src/config/index.ts","../../src/components/MortgageInput/MortgageInput.svelte","../../node_modules/chart.js/dist/chunks/helpers.segment.js","../../node_modules/chart.js/dist/chart.esm.js","../../src/utils/parse-helper.ts","../../src/components/DashboardContent/MonthlyLevel/MonthlyBreakdownPieChart.svelte","../../src/components/DashboardContent/MonthlyLevel/MonthlyBreakdownPieChartWrapper.svelte","../../src/models/MonthlyArc.ts","../../src/components/DashboardContent/MonthlyLevel/ColorLegend.svelte","../../src/components/DashboardContent/MonthlyLevel/PaymentItem.svelte","../../src/components/DashboardContent/MonthlyLevel/MonthlyLevel.svelte","../../src/components/DashboardContent/AmortizationTable/AmortizationTable.svelte","../../src/components/DashboardContent/DashboardContent.svelte","../../src/components/Dashboard/Dashboard.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.35.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { derived, writable } from 'svelte/store';\nfunction getHistory() {\n    let historyFromLocalStorage = localStorage.getItem('history');\n    return historyFromLocalStorage ? JSON.parse(historyFromLocalStorage) : [];\n}\nfunction createHistory() {\n    let historyFromLocalStorage = getHistory();\n    const { subscribe, set, update } = writable(historyFromLocalStorage);\n    return {\n        subscribe,\n        remove: (id) => {\n            let historyFromLocalStorage = getHistory();\n            historyFromLocalStorage = historyFromLocalStorage.filter((e) => e.id !== id);\n            localStorage.setItem('history', JSON.stringify(historyFromLocalStorage));\n            return set(historyFromLocalStorage);\n        },\n        add: (mortgage) => {\n            let historyFromLocalStorage = getHistory();\n            historyFromLocalStorage.unshift(mortgage);\n            localStorage.setItem('history', JSON.stringify(historyFromLocalStorage));\n            return set(historyFromLocalStorage);\n        },\n        reset: () => {\n            localStorage.setItem('history', JSON.stringify([]));\n            set([]);\n        },\n        get: (id) => {\n            let historyFromLocalStorage = getHistory();\n            if (historyFromLocalStorage.length < 1) {\n                return null;\n            }\n            if (id === null || id === undefined || id === 0) {\n                if (historyFromLocalStorage.length > 0) {\n                    id = historyFromLocalStorage[0].id;\n                }\n            }\n            historyFromLocalStorage = historyFromLocalStorage.filter((e) => e.id === id);\n            return historyFromLocalStorage[0];\n        },\n        latest: () => {\n            let historyFromLocalStorage = getHistory();\n            if (historyFromLocalStorage.length < 1) {\n                return null;\n            }\n            return historyFromLocalStorage[0];\n        }\n    };\n}\nexport const history = createHistory();\nconst latest = history.latest();\nexport const currentId = writable(latest ? latest.id : 0);\nexport const currentHistory = derived(currentId, ($currentId) => {\n    let historyFromLocalStorage = getHistory();\n    if (historyFromLocalStorage.length < 1) {\n        return null;\n    }\n    historyFromLocalStorage = historyFromLocalStorage.filter((e) => e.id === $currentId);\n    return historyFromLocalStorage[0];\n});\n","<script lang=\"ts\">\n  export let options;\n  export let content;\n  export let color;\n  export let isDiv;\n  export let handleClick;\n  color = color ? color : 'blue';\n\n  let className = `max-w-max bg-${color}-600 text-white rounded-lg px-4 py-2 border-${color}-800 hover:bg-${color}-700 focus:outline-none focus:ring-2 focus:ring-${color}-700 focus:ring-opacity-50`;\n</script>\n\n{#if isDiv}\n  <div class={className} {...options}>{content}</div>\n{:else}\n  <button type=\"button\" class={className} {...options} on:click={handleClick}>\n    {content}\n  </button>\n{/if}\n","<script lang=\"ts\">\n  import { history, currentId } from '../../services/stores';\n  import Button from '../Button';\n\n  let baseClass = 'max-h-64 mb-4';\n\n  function handleReset() {\n    history.reset();\n  }\n\n  function onDelete(e) {\n    const id = e.target.getAttribute('data-id');\n\n    history.remove(id);\n  }\n\n  function onSelect(e) {\n    const id = e.target.getAttribute('data-id');\n\n    currentId.set(id);\n  }\n</script>\n\n<div class=\"mb-10\">\n  <div class={baseClass}>\n    <table class=\"table-auto\">\n      <thead>\n        <tr>\n          <th class=\"px-4 py-2\">Home Price</th>\n          <th class=\"px-4 py-2 lg:table-cell hidden\">Down Payment</th>\n          <th class=\"px-4 py-2 lg:table-cell hidden\">Interest Rate</th>\n          <th class=\"px-4 py-2 lg:table-cell hidden\">Mortgage Length</th>\n          <th class=\"px-4 py-2\">Delete</th>\n        </tr>\n      </thead>\n      <tbody>\n        {#each $history as row}\n          <tr data-id={row.id}>\n            <td class=\"border px-4 py-2\">\n              <div\n                on:click={onSelect}\n                data-id={row.id}\n                class=\"cursor-pointer w-max text-blue-600 hover:underline\"\n              >\n                $ {row.homePrice}\n              </div>\n            </td>\n            <td class=\"border px-4 py-2 lg:table-cell hidden\"\n              >{row.downPayment}</td\n            >\n            <td class=\"border px-4 py-2 lg:table-cell hidden\"\n              >{row.interestRate}</td\n            >\n            <td class=\"border px-4 py-2 lg:table-cell hidden\"\n              >{row.mortgageLength}</td\n            >\n            <td class=\"border px-4 py-2\">\n              <div\n                data-id={row.id}\n                on:click={onDelete}\n                class=\"w-max cursor-pointer\"\n              >\n                ❌\n              </div>\n            </td>\n          </tr>\n        {/each}\n      </tbody>\n    </table>\n  </div>\n\n  <div class=\"flex justify-center\">\n    <Button handleClick={handleReset} content=\"🗑️ Reset\" />\n  </div>\n</div>\n","<script lang=\"ts\">\n  import Button from '../Button';\n  export let options;\n  export let content;\n  export let color;\n  export let inputValue;\n  color = color ? color : 'blue';\n  content = content ? content : [];\n  let className = `max-w-max max-h-11 bg-${color}-600 text-white px-4 py-2 border-${color}-800 cursor-pointer hover:bg-${color}-700 focus:outline-none focus:ring-2 focus:ring-${color}-700 focus:ring-opacity-50`;\n\n  let contentType;\n  const firstContent = content.length > 0 ? content[0] : null;\n  if (firstContent) {\n    if (\n      typeof firstContent === 'number' ||\n      typeof firstContent === 'string' ||\n      typeof firstContent === 'object'\n    ) {\n      contentType = typeof firstContent;\n    }\n  }\n\n  function handleClick(event) {\n    if (!event) {\n      return;\n    }\n\n    inputValue = event.target.getAttribute('data-value');\n  }\n</script>\n\n<div class=\"button-group flex\">\n  {#if content.length == 1}\n    <Button content={content[0]} {color} isDiv=\"true\" />\n  {:else if content.length > 1}\n    {#each content as el, i}\n      {#if contentType === 'number' || contentType === 'string'}\n        {#if i == 0}\n          <div\n            class={className + ' rounded-l-lg'}\n            on:click={handleClick}\n            {...options}\n          >\n            {content[i]}\n          </div>\n        {:else if i == content.length - 1}\n          <div\n            class={className + ' rounded-r-lg'}\n            on:click={handleClick}\n            {...options}\n          >\n            {content[i]}\n          </div>\n        {:else}\n          <div class={className} on:click={handleClick} {...options}>\n            {content[i]}\n          </div>\n        {/if}\n      {:else if contentType === 'object'}\n        {#if i === 0}\n          <div\n            class={className + ' rounded-l-lg'}\n            on:click={handleClick}\n            data-value={el.value}\n            {...options}\n          >\n            {el.display}\n          </div>\n        {:else if i === content.length - 1}\n          <div\n            class={className + ' rounded-r-lg'}\n            on:click={handleClick}\n            data-value={el.value}\n            {...options}\n          >\n            {el.display}\n          </div>\n        {:else}\n          <div\n            class={className}\n            on:click={handleClick}\n            data-value={el.value}\n            {...options}\n          >\n            {el.display}\n          </div>\n        {/if}\n      {/if}\n    {/each}\n  {/if}\n</div>\n","<script lang=\"ts\">\n  import { tick } from 'svelte';\n\n  export let options;\n  export let value;\n  export let present;\n  export let shouldTick;\n  present = present ? present : (v) => v;\n\n  if (options && options.value) {\n    value = options.value;\n  }\n\n  value = present(value);\n\n  async function handleInput(event) {\n    let position = event.target.selectionStart;\n    value = present(event.target.value, event);\n\n    if (shouldTick) {\n      await tick();\n    }\n\n    event.target.selectionEnd = position;\n    return;\n  }\n</script>\n\n<input {...options} on:input|self={handleInput} bind:value />\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","import root from './_root.js';\nimport toInteger from './toInteger.js';\nimport toNumber from './toNumber.js';\nimport toString from './toString.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsFinite = root.isFinite,\n    nativeMin = Math.min;\n\n/**\n * Creates a function like `_.round`.\n *\n * @private\n * @param {string} methodName The name of the `Math` method to use when rounding.\n * @returns {Function} Returns the new round function.\n */\nfunction createRound(methodName) {\n  var func = Math[methodName];\n  return function(number, precision) {\n    number = toNumber(number);\n    precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n    if (precision && nativeIsFinite(number)) {\n      // Shift with exponential notation to avoid floating-point issues.\n      // See [MDN](https://mdn.io/round#Examples) for more details.\n      var pair = (toString(number) + 'e').split('e'),\n          value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n      pair = (toString(value) + 'e').split('e');\n      return +(pair[0] + 'e' + (+pair[1] - precision));\n    }\n    return func(number);\n  };\n}\n\nexport default createRound;\n","import createRound from './_createRound.js';\n\n/**\n * Computes `number` rounded to `precision`.\n *\n * @static\n * @memberOf _\n * @since 3.10.0\n * @category Math\n * @param {number} number The number to round.\n * @param {number} [precision=0] The precision to round to.\n * @returns {number} Returns the rounded number.\n * @example\n *\n * _.round(4.006);\n * // => 4\n *\n * _.round(4.006, 2);\n * // => 4.01\n *\n * _.round(4060, -2);\n * // => 4100\n */\nvar round = createRound('round');\n\nexport default round;\n","import toString from './toString.js';\n\n/** Used to generate unique IDs. */\nvar idCounter = 0;\n\n/**\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {string} [prefix=''] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @example\n *\n * _.uniqueId('contact_');\n * // => 'contact_104'\n *\n * _.uniqueId();\n * // => '105'\n */\nfunction uniqueId(prefix) {\n  var id = ++idCounter;\n  return toString(prefix) + id;\n}\n\nexport default uniqueId;\n","<script lang=\"ts\">\n  import Input from './Input.svelte';\n  import { uniqueId } from 'lodash-es';\n\n  export let options;\n  export let prefix;\n  export let label;\n  export let subtext;\n  export let valueType;\n  export let suffix;\n  export let inputValue;\n  export let maximum;\n  export let minimum;\n  prefix = prefix ? prefix : null;\n  label = label ? label : null;\n  subtext = subtext ? subtext : null;\n  suffix = suffix ? suffix : null;\n  valueType = valueType ? validateValueType(valueType) : null;\n\n  maximum = maximum ? maximum : Number.MAX_VALUE;\n  minimum = minimum ? minimum : Number.MIN_VALUE;\n\n  const divId = uniqueId('textFieldInput_');\n\n  let inputClass =\n    'w-full px-3 py-2 transition-all focus:outline-none focus:ring focus:border-blue-300';\n\n  if (prefix && suffix) {\n    // Do not round border.\n  } else if (prefix) {\n    inputClass += ' rounded-r';\n  } else if (suffix) {\n    inputClass += ' rounded-l';\n  } else {\n    inputClass += ' rounded';\n  }\n\n  if (options && options.readOnly === true) {\n    inputClass += ' bg-gray-200';\n  }\n\n  // currency is the only supported valueType.\n  // undefined and null are acceptable values.\n  function validateValueType(aValueType) {\n    const VALID_VALUE_TYPES = ['currency', 'number', 'year'];\n\n    if (aValueType === undefined || aValueType === null) {\n      return aValueType;\n    }\n\n    if (VALID_VALUE_TYPES.indexOf(aValueType) < 0) {\n      throw new Error('invalid valueType prop value');\n    }\n\n    return aValueType;\n  }\n\n  let presentInput = function presentInput(aInputValue) {\n    const MAX_FLOAT = 1000000000;\n\n    if (valueType === 'currency') {\n      return function (currentValue, event) {\n        if (event && !Number.isInteger(parseInt(event.data))) {\n          inputValue = 0;\n          return inputValue;\n        }\n\n        if (!currentValue) {\n          inputValue = 0;\n          return inputValue;\n        }\n\n        if (typeof currentValue === 'string') {\n          currentValue = Number.parseFloat(\n            currentValue.replace(/[^0-9.]/g, '')\n          );\n        }\n\n        if (currentValue > MAX_FLOAT || currentValue > maximum) {\n          inputValue = 0;\n          return inputValue;\n        }\n\n        currentValue = Number.parseFloat(currentValue).toLocaleString('en-US', {\n          maximumFractionDigits: 2\n        });\n\n        inputValue = currentValue;\n\n        return inputValue;\n      };\n    } else if (valueType === 'number') {\n      return function (currentValue, event) {\n        if (event && event.data === '.') {\n          inputValue = currentValue;\n          return inputValue;\n        }\n\n        if (event && !Number.isInteger(parseInt(event.data))) {\n          inputValue = 0;\n          return inputValue;\n        }\n\n        if (!currentValue) {\n          inputValue = 0;\n          return inputValue;\n        }\n\n        if (typeof currentValue === 'string') {\n          currentValue = Number.parseFloat(\n            currentValue.replace(/[^0-9.]/g, '')\n          );\n        }\n\n        if (currentValue > MAX_FLOAT || currentValue > maximum) {\n          inputValue = 0;\n          return inputValue;\n        }\n\n        if (currentValue < minimum) {\n          inputValue = 0;\n          return inputValue;\n        }\n\n        inputValue = currentValue;\n\n        return inputValue;\n      };\n    } else if (valueType === 'year') {\n      return function (currentValue, event) {\n        if (event && !Number.isInteger(parseInt(event.data))) {\n          inputValue = 0;\n          return inputValue;\n        }\n\n        if (!currentValue) {\n          inputValue = 0;\n          return inputValue;\n        }\n\n        if (typeof currentValue === 'string') {\n          currentValue = Number.parseFloat(\n            currentValue.replace(/[^0-9.]/g, '')\n          );\n        }\n\n        if (currentValue > 3000) {\n          inputValue = 0;\n          return inputValue;\n        }\n\n        if (currentValue > MAX_FLOAT) {\n          inputValue = 0;\n          return inputValue;\n        }\n\n        inputValue = currentValue;\n\n        return inputValue;\n      };\n    } else {\n      return function (currentValue, event) {\n        inputValue = currentValue;\n\n        return inputValue;\n      };\n    }\n  };\n</script>\n\n<div class=\"text-field flex flex-col\">\n  {#if label}\n    <label class=\"text-field-label leading-8\" for={divId}>\n      {label}\n    </label>\n  {/if}\n  <div class=\"text-field-input flex rounded border border-gray-300 bg-gray-200\">\n    {#if prefix}\n      <div class=\"border-r px-3 pt-1.5\">\n        {prefix}\n      </div>\n    {/if}\n    <Input\n      options={{\n        type: 'text',\n        id: divId,\n        class: inputClass,\n        ...options\n      }}\n      present={presentInput(valueType)}\n    />\n    {#if suffix}\n      <div class=\"border-l px-3 pt-1.5\">\n        {suffix}\n      </div>\n    {/if}\n  </div>\n  {#if subtext}\n    <div class=\"mt-1 text-sm text-gray-600\">\n      {subtext}\n    </div>\n  {/if}\n</div>\n","<script lang=\"ts\">\n  import ButtonGroup from '../ButtonGroup';\n  import TextField from '../TextField';\n\n  export let mortgageLength;\n\n  const content = [\n    { display: 30, value: 30 },\n    { display: 20, value: 20 },\n    { display: 15, value: 15 },\n    { display: 10, value: 10 }\n  ];\n</script>\n\n<div class=\"mortgage-length md:w-96\">\n  <div class=\"mb-2\">Mortgage Length</div>\n  <div class=\"flex flex-col md:flex-row\">\n    <div class=\"mr-4 w-full flex-1 mb-2 md:mb-0\">\n      <TextField prefix=\"Year\" options={{ value: mortgageLength }} />\n    </div>\n\n    <div class=\"flex-1\">\n      <ButtonGroup {content} bind:inputValue={mortgageLength} />\n    </div>\n  </div>\n</div>\n","<script lang=\"ts\">\n  export let options;\n  export let selectOptions;\n  export let label;\n  selectOptions = selectOptions ? selectOptions : [];\n</script>\n\n<div class=\"select flex flex-col\">\n  {#if label}\n    <label class=\"text-field-label leading-8\" for=\"selectInput\">\n      {label}\n    </label>\n  {/if}\n\n  <select\n    {...options}\n    id=\"selectInput\"\n    class=\"max-w-max px-3 py-2 transition-all rounded border border-gray-300 bg-white focus:outline-none focus:ring focus:border-blue-300\"\n  >\n    {#each selectOptions as opt}\n      {#if options && options.defaultValue && opt.value === options.defaultValue}\n        <option value={opt.value} selected>{opt.display}</option>\n      {:else}\n        <option value={opt.value}>{opt.display}</option>\n      {/if}\n    {/each}\n  </select>\n</div>\n","<script lang=\"ts\">\n  import Select from '../Select';\n\n  export let options;\n  export let defaultMonth;\n\n  options = options ? options : {};\n  options.defaultValue = defaultMonth;\n\n  let months = [\n    {\n      value: 1,\n      display: 'January'\n    },\n    {\n      value: 2,\n      display: 'February'\n    },\n    {\n      value: 3,\n      display: 'March'\n    },\n    {\n      value: 4,\n      display: 'April'\n    },\n    {\n      value: 5,\n      display: 'May'\n    },\n    {\n      value: 6,\n      display: 'June'\n    },\n    {\n      value: 7,\n      display: 'July'\n    },\n    {\n      value: 8,\n      display: 'August'\n    },\n    {\n      value: 9,\n      display: 'September'\n    },\n    {\n      value: 10,\n      display: 'October'\n    },\n    {\n      value: 11,\n      display: 'November'\n    },\n    {\n      value: 12,\n      display: 'December'\n    }\n  ];\n</script>\n\n<Select label=\"Starting Month\" selectOptions={months} {options} />\n","<script lang=\"ts\">\n  import TextField from '../TextField';\n  export let options;\n  export let defaultYear;\n</script>\n\n<TextField\n  label=\"Starting Year\"\n  valueType=\"year\"\n  options={{ value: defaultYear }}\n/>\n","<script lang=\"ts\">\n  import MonthSelect from '../MonthSelect';\n  import YearTextField from '../YearTextField';\n  export let options;\n  export let defaultMonth;\n  export let defaultYear;\n</script>\n\n<div class=\"flex\">\n  <div class=\"mr-4\">\n    <MonthSelect {defaultMonth} />\n  </div>\n\n  <div class=\"w-24\">\n    <YearTextField {defaultYear} />\n  </div>\n</div>\n","<script lang=\"ts\">\n  import TextField from '../TextField';\n\n  export let interestRate;\n\n  $: apr = (function () {\n    if (!interestRate) {\n      return 0;\n    }\n\n    interestRate = Number.parseFloat(interestRate);\n\n    let floating = Math.pow(1 + interestRate / 100 / 12, 12) - 1;\n    return (floating * 100).toFixed(5);\n  })();\n</script>\n\n<div class=\"flex\">\n  <div class=\"mr-4\">\n    <TextField\n      label=\"Interest Rate\"\n      prefix=\"%\"\n      valueType=\"number\"\n      bind:inputValue={interestRate}\n      options={{ value: interestRate }}\n    />\n  </div>\n\n  <TextField\n    label=\"APR\"\n    prefix=\"%\"\n    valueType=\"number\"\n    options={{ readOnly: true, value: apr }}\n  />\n</div>\n","<script lang=\"ts\">\n  import TextField from '../TextField';\n\n  export let homePrice;\n  export let downPaymentPercentage;\n  export let downPaymentAmount;\n\n  const maxPercentage = 100;\n  const minPercentage = 0;\n  const minAmount = 0;\n\n  $: downPaymentAmount = calcDownPaymentAmount(\n    homePrice,\n    downPaymentPercentage\n  );\n  $: reactiveDownPaymentPercentage = calcReactiveDownPaymentPercentage(\n    downPaymentAmount,\n    homePrice\n  );\n\n  function calcDownPaymentAmount(homePrice, downPaymentPercentage) {\n    if (typeof homePrice === 'string') {\n      homePrice = Number.parseFloat(homePrice.replace(/\\D/g, ''));\n    }\n\n    return (homePrice * downPaymentPercentage) / 100;\n  }\n\n  function calcReactiveDownPaymentPercentage(downPaymentAmount, homePrice) {\n    if (typeof homePrice === 'string') {\n      homePrice = Number.parseFloat(homePrice.replace(/\\D/g, ''));\n    }\n\n    return Math.floor((downPaymentAmount / homePrice) * 100);\n  }\n</script>\n\n<div class=\"flex flex-col\">\n  <div class=\"\">Down Payment</div>\n  <div class=\"flex\">\n    <div class=\"mr-4\">\n      <TextField\n        prefix=\"$\"\n        valueType=\"number\"\n        maximum={homePrice}\n        minimum={minAmount}\n        bind:inputValue={downPaymentAmount}\n        options={{ value: downPaymentAmount }}\n      />\n    </div>\n    <TextField\n      prefix=\"%\"\n      valueType=\"number\"\n      maximum={maxPercentage}\n      minimum={minPercentage}\n      bind:inputValue={downPaymentPercentage}\n      options={{ value: reactiveDownPaymentPercentage }}\n    />\n  </div>\n</div>\n","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (process.env.NODE_ENV !== 'production') {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import { nanoid } from 'nanoid';\nexport default class Mortgage {\n    constructor(homePrice, downPayment, interestRate, mortgageLength, startMonth, startYear) {\n        this.id = nanoid();\n        this.homePrice = homePrice;\n        this.downPayment = downPayment;\n        this.interestRate = interestRate;\n        this.mortgageLength = mortgageLength;\n        this.startMonth = startMonth;\n        this.startYear = startYear;\n    }\n}\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):t.dayjs=e()}(this,function(){\"use strict\";var t=\"millisecond\",e=\"second\",n=\"minute\",r=\"hour\",i=\"day\",s=\"week\",u=\"month\",a=\"quarter\",o=\"year\",f=\"date\",h=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[^0-9]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,c=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,d={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\")},$=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},l={s:$,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+$(r,2,\"0\")+\":\"+$(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,u),s=n-i<0,a=e.clone().add(r+(s?-1:1),u);return+(-(r+(n-i)/(s?i-a:a-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(h){return{M:u,y:o,w:s,d:i,D:f,h:r,m:n,s:e,ms:t,Q:a}[h]||String(h||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},y=\"en\",M={};M[y]=d;var m=function(t){return t instanceof S},D=function(t,e,n){var r;if(!t)return y;if(\"string\"==typeof t)M[t]&&(r=t),e&&(M[t]=e,r=t);else{var i=t.name;M[i]=t,r=i}return!n&&r&&(y=r),r||!n&&y},v=function(t,e){if(m(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new S(n)},g=l;g.l=D,g.i=m,g.w=function(t,e){return v(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var S=function(){function d(t){this.$L=D(t.locale,null,!0),this.parse(t)}var $=d.prototype;return $.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(g.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match(h);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.$x=t.x||{},this.init()},$.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},$.$utils=function(){return g},$.isValid=function(){return!(\"Invalid Date\"===this.$d.toString())},$.isSame=function(t,e){var n=v(t);return this.startOf(e)<=n&&n<=this.endOf(e)},$.isAfter=function(t,e){return v(t)<this.startOf(e)},$.isBefore=function(t,e){return this.endOf(e)<v(t)},$.$g=function(t,e,n){return g.u(t)?this[e]:this.set(n,t)},$.unix=function(){return Math.floor(this.valueOf()/1e3)},$.valueOf=function(){return this.$d.getTime()},$.startOf=function(t,a){var h=this,c=!!g.u(a)||a,d=g.p(t),$=function(t,e){var n=g.w(h.$u?Date.UTC(h.$y,e,t):new Date(h.$y,e,t),h);return c?n:n.endOf(i)},l=function(t,e){return g.w(h.toDate()[t].apply(h.toDate(\"s\"),(c?[0,0,0,0]:[23,59,59,999]).slice(e)),h)},y=this.$W,M=this.$M,m=this.$D,D=\"set\"+(this.$u?\"UTC\":\"\");switch(d){case o:return c?$(1,0):$(31,11);case u:return c?$(1,M):$(0,M+1);case s:var v=this.$locale().weekStart||0,S=(y<v?y+7:y)-v;return $(c?m-S:m+(6-S),M);case i:case f:return l(D+\"Hours\",0);case r:return l(D+\"Minutes\",1);case n:return l(D+\"Seconds\",2);case e:return l(D+\"Milliseconds\",3);default:return this.clone()}},$.endOf=function(t){return this.startOf(t,!1)},$.$set=function(s,a){var h,c=g.p(s),d=\"set\"+(this.$u?\"UTC\":\"\"),$=(h={},h[i]=d+\"Date\",h[f]=d+\"Date\",h[u]=d+\"Month\",h[o]=d+\"FullYear\",h[r]=d+\"Hours\",h[n]=d+\"Minutes\",h[e]=d+\"Seconds\",h[t]=d+\"Milliseconds\",h)[c],l=c===i?this.$D+(a-this.$W):a;if(c===u||c===o){var y=this.clone().set(f,1);y.$d[$](l),y.init(),this.$d=y.set(f,Math.min(this.$D,y.daysInMonth())).$d}else $&&this.$d[$](l);return this.init(),this},$.set=function(t,e){return this.clone().$set(t,e)},$.get=function(t){return this[g.p(t)]()},$.add=function(t,a){var f,h=this;t=Number(t);var c=g.p(a),d=function(e){var n=v(h);return g.w(n.date(n.date()+Math.round(e*t)),h)};if(c===u)return this.set(u,this.$M+t);if(c===o)return this.set(o,this.$y+t);if(c===i)return d(1);if(c===s)return d(7);var $=(f={},f[n]=6e4,f[r]=36e5,f[e]=1e3,f)[c]||1,l=this.$d.getTime()+t*$;return g.w(l,this)},$.subtract=function(t,e){return this.add(-1*t,e)},$.format=function(t){var e=this;if(!this.isValid())return\"Invalid Date\";var n=t||\"YYYY-MM-DDTHH:mm:ssZ\",r=g.z(this),i=this.$locale(),s=this.$H,u=this.$m,a=this.$M,o=i.weekdays,f=i.months,h=function(t,r,i,s){return t&&(t[r]||t(e,n))||i[r].substr(0,s)},d=function(t){return g.s(s%12||12,t,\"0\")},$=i.meridiem||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:g.s(a+1,2,\"0\"),MMM:h(i.monthsShort,a,f,3),MMMM:h(f,a),D:this.$D,DD:g.s(this.$D,2,\"0\"),d:String(this.$W),dd:h(i.weekdaysMin,this.$W,o,2),ddd:h(i.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:g.s(s,2,\"0\"),h:d(1),hh:d(2),a:$(s,u,!0),A:$(s,u,!1),m:String(u),mm:g.s(u,2,\"0\"),s:String(this.$s),ss:g.s(this.$s,2,\"0\"),SSS:g.s(this.$ms,3,\"0\"),Z:r};return n.replace(c,function(t,e){return e||l[t]||r.replace(\":\",\"\")})},$.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},$.diff=function(t,f,h){var c,d=g.p(f),$=v(t),l=6e4*($.utcOffset()-this.utcOffset()),y=this-$,M=g.m(this,$);return M=(c={},c[o]=M/12,c[u]=M,c[a]=M/3,c[s]=(y-l)/6048e5,c[i]=(y-l)/864e5,c[r]=y/36e5,c[n]=y/6e4,c[e]=y/1e3,c)[d]||y,h?M:g.a(M)},$.daysInMonth=function(){return this.endOf(u).$D},$.$locale=function(){return M[this.$L]},$.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=D(t,e,!0);return r&&(n.$L=r),n},$.clone=function(){return g.w(this.$d,this)},$.toDate=function(){return new Date(this.valueOf())},$.toJSON=function(){return this.isValid()?this.toISOString():null},$.toISOString=function(){return this.$d.toISOString()},$.toString=function(){return this.$d.toUTCString()},d}(),p=S.prototype;return v.prototype=p,[[\"$ms\",t],[\"$s\",e],[\"$m\",n],[\"$H\",r],[\"$W\",i],[\"$M\",u],[\"$y\",o],[\"$D\",f]].forEach(function(t){p[t[1]]=function(e){return this.$g(e,t[0],t[1])}}),v.extend=function(t,e){return t.$i||(t(e,S,v),t.$i=!0),v},v.locale=D,v.isDayjs=m,v.unix=function(t){return v(1e3*t)},v.en=M[y],v.Ls=M,v.p={},v});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PaymentTotal = /** @class */ (function () {\n    function PaymentTotal(interest, principle, total) {\n        this.interest = interest;\n        this.principle = principle;\n        this.total = total;\n    }\n    return PaymentTotal;\n}());\nexports.default = PaymentTotal;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction toFixed(amount, digits) {\n    return parseFloat(amount.toFixed(digits));\n}\nexports.default = toFixed;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar to_fixed_1 = __importDefault(require(\"../utils/to-fixed\"));\nvar Payment = /** @class */ (function () {\n    function Payment(id, totalPayment, principlePayment, interestPayment, principleRemaining, interestCumulative) {\n        this.id = id;\n        this.totalPayment = totalPayment;\n        this.principlePayment = principlePayment;\n        this.interestPayment = interestPayment;\n        this.principleRemaining = principleRemaining;\n        this.interestCumulative = interestCumulative;\n    }\n    Payment.prototype.rebalance = function () {\n        if (this.principleRemaining >= 0) {\n            return;\n        }\n        this.totalPayment += this.principleRemaining;\n        this.totalPayment = to_fixed_1.default(this.totalPayment, 2);\n        this.principlePayment += this.principleRemaining;\n        this.principlePayment = to_fixed_1.default(this.principlePayment, 2);\n        this.principleRemaining = 0;\n    };\n    return Payment;\n}());\nexports.default = Payment;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PaymentTotal_1 = __importDefault(require(\"./models/PaymentTotal\"));\nvar Payment_1 = __importDefault(require(\"./models/Payment\"));\nvar to_fixed_1 = __importDefault(require(\"./utils/to-fixed\"));\nvar Calculator = /** @class */ (function () {\n    function Calculator() {\n    }\n    Calculator.calculate = function (loan) {\n        loan.payments = this.calculatePayments(loan);\n        loan.total = this.calculatePaymentTotal(loan);\n        loan.monthlyPayment = this.getMonthlyPayment(loan.payments);\n    };\n    Calculator.getMonthlyPayment = function (payments) {\n        if (payments.length < 1) {\n            throw new Error('payments are empty');\n        }\n        var firstEl = payments[0];\n        if (firstEl.totalPayment === undefined || firstEl.totalPayment === null) {\n            throw new Error('invalid payment object');\n        }\n        return firstEl.totalPayment;\n    };\n    Calculator.calculatePaymentTotal = function (loan) {\n        var principle = loan.amount - loan.downPayment;\n        var total = Calculator.calculateTotal(loan);\n        var interest = total - principle;\n        return new PaymentTotal_1.default(interest, principle, total);\n    };\n    Calculator.calculateTotal = function (loan) {\n        var sum = 0;\n        for (var _i = 0, _a = loan.payments; _i < _a.length; _i++) {\n            var payment = _a[_i];\n            sum += payment.totalPayment;\n        }\n        return to_fixed_1.default(sum, 2);\n    };\n    Calculator.calculatePayments = function (loan) {\n        var result = [];\n        var currentPrinciple = loan.amount - loan.downPayment;\n        var totalPaymentPerPeriod = this.totalPaymentPerPeriod(loan);\n        var interestCumulative = 0;\n        for (var i = 0; i < loan.years * loan.paymentsPerYear; i++) {\n            var interestPaymentPerPeriod = this.interestPaymentPerPeriod(loan, currentPrinciple);\n            interestCumulative += interestPaymentPerPeriod;\n            interestCumulative = to_fixed_1.default(interestCumulative, 2);\n            var principlePaid = totalPaymentPerPeriod - interestPaymentPerPeriod;\n            currentPrinciple -= principlePaid;\n            currentPrinciple = to_fixed_1.default(currentPrinciple, 2);\n            var payment = new Payment_1.default(i + 1, totalPaymentPerPeriod, principlePaid, interestPaymentPerPeriod, currentPrinciple, interestCumulative);\n            result.push(payment);\n        }\n        var lastPayment = result[result.length - 1];\n        lastPayment.rebalance();\n        return result;\n    };\n    Calculator.interestPaymentPerPeriod = function (loan, principle) {\n        var amount = principle * (loan.interest / loan.paymentsPerYear / 100);\n        return to_fixed_1.default(amount, 2);\n    };\n    Calculator.ratePerPeriod = function (interestRate, paymentsPerYear) {\n        return interestRate / paymentsPerYear / 100;\n    };\n    Calculator.interestPowerMultiplier = function (ratePerPeriod, paymentsPerYear, years) {\n        return Math.pow(1 + ratePerPeriod, paymentsPerYear * years);\n    };\n    Calculator.totalPaymentPerPeriod = function (loan) {\n        var loanAmount = loan.amount - loan.downPayment;\n        var rate = this.ratePerPeriod(loan.interest, loan.paymentsPerYear);\n        var multiplier = this.interestPowerMultiplier(rate, loan.paymentsPerYear, loan.years);\n        return to_fixed_1.default((loanAmount * (rate * multiplier)) / (multiplier - 1), 2);\n    };\n    Calculator.calculatePrinciple = function (monthlyPayment, interest, years, paymentsPerYear) {\n        // M = P[r(1+r)^n/((1+r)^n)-1)]\n        var n = years * paymentsPerYear;\n        var r = interest / 100 / paymentsPerYear;\n        var powerI = Math.pow(1 + r, n);\n        return to_fixed_1.default((monthlyPayment * (powerI - 1)) / (r * powerI), 2);\n    };\n    return Calculator;\n}());\nexports.default = Calculator;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PaymentTotal_1 = __importDefault(require(\"./PaymentTotal\"));\nvar Calculator_1 = __importDefault(require(\"../Calculator\"));\nvar to_fixed_1 = __importDefault(require(\"../utils/to-fixed\"));\nvar Loan = /** @class */ (function () {\n    function Loan(amount, downPayment, interest, years, paymentsPerYear) {\n        this.amount = amount;\n        this.downPayment = downPayment;\n        this.downPaymentRatio = this.calculateDownPaymentRatio(amount, downPayment);\n        this.interest = interest;\n        this.years = years;\n        this.paymentsPerYear = paymentsPerYear;\n        this.total = new PaymentTotal_1.default(0, 0, 0);\n        this.payments = [];\n        this.monthlyPayment = 0;\n    }\n    Loan.prototype.calculateDownPaymentRatio = function (amount, downPayment) {\n        if (amount === 0 || downPayment === 0) {\n            return 0;\n        }\n        return to_fixed_1.default(downPayment / amount, 4);\n    };\n    Loan.prototype.calculate = function () {\n        Calculator_1.default.calculate(this);\n    };\n    return Loan;\n}());\nexports.default = Loan;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculatePrinciple = exports.amortize = void 0;\nvar Calculator_1 = __importDefault(require(\"./Calculator\"));\nvar Loan_1 = __importDefault(require(\"./models/Loan\"));\nfunction amortize(amount, downPayment, interest, years, paymentsPerYear) {\n    var loan = new Loan_1.default(amount, downPayment, interest, years, paymentsPerYear);\n    loan.calculate();\n    return loan;\n}\nexports.default = amortize;\nexports.amortize = amortize;\nfunction calculatePrinciple(monthlyPayment, interest, years, paymentsPerYear) {\n    return Calculator_1.default.calculatePrinciple(monthlyPayment, interest, years, paymentsPerYear);\n}\nexports.calculatePrinciple = calculatePrinciple;\n","export default {\n    appName: 'Mortgage Calculator',\n    defaultHomePrice: 345000,\n    defaultDownPaymentPercentage: 20,\n    defaultInterestRate: 4.5,\n    defaultMortgageLength: 30,\n    defaultPaymentCountPerYear: 12,\n    monthlyArcColors: {\n        principleInterest: 'rgb(50, 56, 168)',\n        insurance: 'rgb(154, 48, 186)',\n        tax: 'rgb(219, 0, 58)',\n        hoa: 'rgb(219, 120, 0)'\n    },\n    monthlyArcAmounts: {\n        insurnace: 75,\n        tax: 200,\n        hoa: 30\n    }\n};\n","<script lang=\"ts\">\n  import Button from '../Button';\n  import MortgageLength from '../MortgageLength';\n  import MortgageStartMonthYear from '../MortgageStartMonthYear';\n  import InterestRate from '../InterestRate';\n  import TextField from '../TextField';\n  import DownPayment from '../DownPayment';\n  import { currentId, history } from '../../services/stores';\n  import Mortgage from '../../models/Mortgage';\n  import dayjs from 'dayjs';\n  import amortize from 'amortizationjs';\n  import { round } from 'lodash-es';\n\n  import config from '../../config';\n  const {\n    defaultHomePrice,\n    defaultDownPaymentPercentage,\n    defaultInterestRate,\n    defaultMortgageLength,\n    defaultPaymentCountPerYear\n  } = config;\n\n  export let homePrice: any;\n  export let interestRate;\n  export let mortgageLength;\n  export let downPaymentPercentage;\n\n  homePrice = homePrice ? homePrice : defaultHomePrice;\n  interestRate = interestRate ? interestRate : defaultInterestRate;\n  mortgageLength = mortgageLength ? mortgageLength : defaultMortgageLength;\n  downPaymentPercentage = downPaymentPercentage\n    ? downPaymentPercentage\n    : defaultDownPaymentPercentage;\n\n  let downPaymentAmount = (homePrice * downPaymentPercentage) / 100;\n\n  export let loan = amortize(\n    homePrice,\n    downPaymentAmount,\n    interestRate,\n    mortgageLength,\n    defaultPaymentCountPerYear\n  );\n\n  function handleClick() {\n    const homePriceNumber =\n      typeof homePrice === 'string'\n        ? parseFloat(homePrice.replaceAll(',', ''))\n        : homePrice;\n\n    loan = amortize(\n      homePriceNumber,\n      downPaymentAmount,\n      interestRate,\n      mortgageLength,\n      defaultPaymentCountPerYear\n    );\n\n    const mortgage = new Mortgage(\n      loan.amount,\n      round(loan.downPaymentRatio * 100, 2),\n      round(loan.interest, 2),\n      loan.years,\n      0,\n      0\n    );\n    history.add(mortgage);\n    currentId.set(mortgage.id);\n  }\n</script>\n\n<div>\n  <div class=\"mb-6\">\n    <TextField\n      prefix=\"$\"\n      label=\"Home Price\"\n      valueType=\"currency\"\n      options={{ value: homePrice }}\n      bind:inputValue={homePrice}\n    />\n  </div>\n\n  <div class=\"mb-6\">\n    <DownPayment\n      {homePrice}\n      bind:downPaymentPercentage\n      bind:downPaymentAmount\n    />\n  </div>\n\n  <div class=\"mb-6\">\n    <InterestRate bind:interestRate />\n  </div>\n\n  <div class=\"flex mb-6 justify-between flex-col md:flex-row\">\n    <div class=\"mb-6 md:mb-0\">\n      <MortgageLength bind:mortgageLength />\n    </div>\n\n    <div>\n      <MortgageStartMonthYear\n        defaultMonth={dayjs().month() + 1}\n        defaultYear={dayjs().year()}\n      />\n    </div>\n  </div>\n\n  <div class=\"flex justify-center\">\n    <Button {handleClick} content=\"Calculate\" />\n  </div>\n</div>\n","/*!\n * Chart.js v3.1.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function() {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay);\n    } else {\n      fn();\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right) => align === 'right' ? right : align === 'center' ? (left + right) / 2 : left;\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.substr(pos, idx - pos)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.1.9\n * https://github.com/kurkle/color#readme\n * (c) 2020 Jukka Kurkela\n * Released under the MIT License\n */\nconst map = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = '0123456789ABCDEF';\nconst h1 = (b) => hex[b & 0xF];\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\nfunction isShort(v) {\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n}\nfunction hexParse(str) {\n\tvar len = str.length;\n\tvar ret;\n\tif (str[0] === '#') {\n\t\tif (len === 4 || len === 5) {\n\t\t\tret = {\n\t\t\t\tr: 255 & map[str[1]] * 17,\n\t\t\t\tg: 255 & map[str[2]] * 17,\n\t\t\t\tb: 255 & map[str[3]] * 17,\n\t\t\t\ta: len === 5 ? map[str[4]] * 17 : 255\n\t\t\t};\n\t\t} else if (len === 7 || len === 9) {\n\t\t\tret = {\n\t\t\t\tr: map[str[1]] << 4 | map[str[2]],\n\t\t\t\tg: map[str[3]] << 4 | map[str[4]],\n\t\t\t\tb: map[str[5]] << 4 | map[str[6]],\n\t\t\t\ta: len === 9 ? (map[str[7]] << 4 | map[str[8]]) : 255\n\t\t\t};\n\t\t}\n\t}\n\treturn ret;\n}\nfunction hexString(v) {\n\tvar f = isShort(v) ? h1 : h2;\n\treturn v\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\n\t\t: v;\n}\nfunction round(v) {\n\treturn v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n\treturn lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n\treturn lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n\treturn lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n\treturn lim(round(v * 100), 0, 100);\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n\tconst m = RGB_RE.exec(str);\n\tlet a = 255;\n\tlet r, g, b;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[7] !== r) {\n\t\tconst v = +m[7];\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\n\t}\n\tr = +m[1];\n\tg = +m[3];\n\tb = +m[5];\n\tr = 255 & (m[2] ? p2b(r) : r);\n\tg = 255 & (m[4] ? p2b(g) : g);\n\tb = 255 & (m[6] ? p2b(b) : b);\n\treturn {\n\t\tr: r,\n\t\tg: g,\n\t\tb: b,\n\t\ta: a\n\t};\n}\nfunction rgbString(v) {\n\treturn v && (\n\t\tv.a < 255\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\n\t);\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n\tconst a = s * Math.min(l, 1 - l);\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\treturn [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\n\tlet i;\n\tif (w + b > 1) {\n\t\ti = 1 / (w + b);\n\t\tw *= i;\n\t\tb *= i;\n\t}\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] *= 1 - w - b;\n\t\trgb[i] += w;\n\t}\n\treturn rgb;\n}\nfunction rgb2hsl(v) {\n\tconst range = 255;\n\tconst r = v.r / range;\n\tconst g = v.g / range;\n\tconst b = v.b / range;\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\tconst l = (max + min) / 2;\n\tlet h, s, d;\n\tif (max !== min) {\n\t\td = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\th = max === r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\n\t\t\t: max === g\n\t\t\t\t? (b - r) / d + 2\n\t\t\t\t: (r - g) / d + 4;\n\t\th = h * 60 + 0.5;\n\t}\n\treturn [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n\treturn (\n\t\tArray.isArray(a)\n\t\t\t? f(a[0], a[1], a[2])\n\t\t\t: f(a, b, c)\n\t).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n\treturn calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n\treturn calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n\treturn calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n\treturn (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n\tconst m = HUE_RE.exec(str);\n\tlet a = 255;\n\tlet v;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[5] !== v) {\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n\t}\n\tconst h = hue(+m[2]);\n\tconst p1 = +m[3] / 100;\n\tconst p2 = +m[4] / 100;\n\tif (m[1] === 'hwb') {\n\t\tv = hwb2rgb(h, p1, p2);\n\t} else if (m[1] === 'hsv') {\n\t\tv = hsv2rgb(h, p1, p2);\n\t} else {\n\t\tv = hsl2rgb(h, p1, p2);\n\t}\n\treturn {\n\t\tr: v[0],\n\t\tg: v[1],\n\t\tb: v[2],\n\t\ta: a\n\t};\n}\nfunction rotate(v, deg) {\n\tvar h = rgb2hsl(v);\n\th[0] = hue(h[0] + deg);\n\th = hsl2rgb(h);\n\tv.r = h[0];\n\tv.g = h[1];\n\tv.b = h[2];\n}\nfunction hslString(v) {\n\tif (!v) {\n\t\treturn;\n\t}\n\tconst a = rgb2hsl(v);\n\tconst h = a[0];\n\tconst s = n2p(a[1]);\n\tconst l = n2p(a[2]);\n\treturn v.a < 255\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$1 = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n\tconst unpacked = {};\n\tconst keys = Object.keys(names);\n\tconst tkeys = Object.keys(map$1);\n\tlet i, j, k, ok, nk;\n\tfor (i = 0; i < keys.length; i++) {\n\t\tok = nk = keys[i];\n\t\tfor (j = 0; j < tkeys.length; j++) {\n\t\t\tk = tkeys[j];\n\t\t\tnk = nk.replace(k, map$1[k]);\n\t\t}\n\t\tk = parseInt(names[ok], 16);\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n\t}\n\treturn unpacked;\n}\nlet names$1;\nfunction nameParse(str) {\n\tif (!names$1) {\n\t\tnames$1 = unpack();\n\t\tnames$1.transparent = [0, 0, 0, 0];\n\t}\n\tconst a = names$1[str.toLowerCase()];\n\treturn a && {\n\t\tr: a[0],\n\t\tg: a[1],\n\t\tb: a[2],\n\t\ta: a.length === 4 ? a[3] : 255\n\t};\n}\nfunction modHSL(v, i, ratio) {\n\tif (v) {\n\t\tlet tmp = rgb2hsl(v);\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n\t\ttmp = hsl2rgb(tmp);\n\t\tv.r = tmp[0];\n\t\tv.g = tmp[1];\n\t\tv.b = tmp[2];\n\t}\n}\nfunction clone(v, proto) {\n\treturn v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\n\tif (Array.isArray(input)) {\n\t\tif (input.length >= 3) {\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\n\t\t\tif (input.length > 3) {\n\t\t\t\tv.a = n2b(input[3]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tv = clone(input, {r: 0, g: 0, b: 0, a: 1});\n\t\tv.a = n2b(v.a);\n\t}\n\treturn v;\n}\nfunction functionParse(str) {\n\tif (str.charAt(0) === 'r') {\n\t\treturn rgbParse(str);\n\t}\n\treturn hueParse(str);\n}\nclass Color {\n\tconstructor(input) {\n\t\tif (input instanceof Color) {\n\t\t\treturn input;\n\t\t}\n\t\tconst type = typeof input;\n\t\tlet v;\n\t\tif (type === 'object') {\n\t\t\tv = fromObject(input);\n\t\t} else if (type === 'string') {\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\n\t\t}\n\t\tthis._rgb = v;\n\t\tthis._valid = !!v;\n\t}\n\tget valid() {\n\t\treturn this._valid;\n\t}\n\tget rgb() {\n\t\tvar v = clone(this._rgb);\n\t\tif (v) {\n\t\t\tv.a = b2n(v.a);\n\t\t}\n\t\treturn v;\n\t}\n\tset rgb(obj) {\n\t\tthis._rgb = fromObject(obj);\n\t}\n\trgbString() {\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\n\t}\n\thexString() {\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\n\t}\n\thslString() {\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\n\t}\n\tmix(color, weight) {\n\t\tconst me = this;\n\t\tif (color) {\n\t\t\tconst c1 = me.rgb;\n\t\t\tconst c2 = color.rgb;\n\t\t\tlet w2;\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\n\t\t\tconst w = 2 * p - 1;\n\t\t\tconst a = c1.a - c2.a;\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\t\tw2 = 1 - w1;\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\n\t\t\tme.rgb = c1;\n\t\t}\n\t\treturn me;\n\t}\n\tclone() {\n\t\treturn new Color(this.rgb);\n\t}\n\talpha(a) {\n\t\tthis._rgb.a = n2b(a);\n\t\treturn this;\n\t}\n\tclearer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 - ratio;\n\t\treturn this;\n\t}\n\tgreyscale() {\n\t\tconst rgb = this._rgb;\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n\t\trgb.r = rgb.g = rgb.b = val;\n\t\treturn this;\n\t}\n\topaquer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 + ratio;\n\t\treturn this;\n\t}\n\tnegate() {\n\t\tconst v = this._rgb;\n\t\tv.r = 255 - v.r;\n\t\tv.g = 255 - v.g;\n\t\tv.b = 255 - v.b;\n\t\treturn this;\n\t}\n\tlighten(ratio) {\n\t\tmodHSL(this._rgb, 2, ratio);\n\t\treturn this;\n\t}\n\tdarken(ratio) {\n\t\tmodHSL(this._rgb, 2, -ratio);\n\t\treturn this;\n\t}\n\tsaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, ratio);\n\t\treturn this;\n\t}\n\tdesaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, -ratio);\n\t\treturn this;\n\t}\n\trotate(deg) {\n\t\trotate(this._rgb, deg);\n\t\treturn this;\n\t}\n}\nfunction index_esm(input) {\n\treturn new Color(input);\n}\n\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  ctx.font = font.string;\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    if (opts.strikethrough || opts.underline) {\n      const metrics = ctx.measureText(line);\n      const left = x - metrics.actualBoundingBoxLeft;\n      const right = x + metrics.actualBoundingBoxRight;\n      const top = y - metrics.actualBoundingBoxAscent;\n      const bottom = y + metrics.actualBoundingBoxDescent;\n      const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n      ctx.strokeStyle = ctx.fillStyle;\n      ctx.beginPath();\n      ctx.lineWidth = opts.decorationWidth || 2;\n      ctx.moveTo(left, yDecoration);\n      ctx.lineTo(right, yDecoration);\n      ctx.stroke();\n    }\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace) {\n  const {min, max} = minmax;\n  return {\n    min: min - Math.abs(toDimension(grace, min)),\n    max: max + toDimension(grace, max)\n  };\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  const result = [];\n  set.forEach(item => {\n    result.push(item);\n  });\n  return result;\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      storage[prop] = value;\n      delete target[prop];\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters';\nfunction _cached(target, prop, resolve) {\n  let value = target[prop];\n  if (defined(value)) {\n    return value;\n  }\n  value = resolve();\n  if (defined(value)) {\n    target[prop] = value;\n  }\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + [..._stack].join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (isObject(value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, scope);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver([...set], [''], rootScopes, fallback, () => {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n      parent[prop] = {};\n    }\n    return parent[prop];\n  });\n}\nfunction addScopesFromKey(set, allScopes, key, fallback) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback);\n  }\n  return key;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return [...set];\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK) {\n  const pointsLen = points.length;\n  let deltaX, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const {x, y} = pointCurrent;\n    if (pointBefore) {\n      deltaX = (x - pointBefore.x) / 3;\n      pointCurrent.cp1x = x - deltaX;\n      pointCurrent.cp1y = y - deltaX * mK[i];\n    }\n    if (pointAfter) {\n      deltaX = (pointAfter.x - x) / 3;\n      pointCurrent.cp2x = x + deltaX;\n      pointCurrent.cp2y = y + deltaX * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points) {\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDeltaX = (pointAfter.x - pointCurrent.x);\n      deltaK[i] = slopeDeltaX !== 0 ? (pointAfter.y - pointCurrent.y) / slopeDeltaX : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(evt, canvas) {\n  const e = evt.native || evt;\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = chart.currentDevicePixelRatio = forceRatio || 1;\n  const {canvas, width, height} = chart;\n  canvas.height = height * pixelRatio;\n  canvas.width = width * pixelRatio;\n  chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = height + 'px';\n    canvas.style.width = width + 'px';\n  }\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: (n, s, e) => n >= Math.min(s, e) && n <= Math.max(e, s),\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles([{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(segments, points, segmentOptions);\n}\nfunction doSplitByStyles(segments, points, segmentOptions) {\n  const count = points.length;\n  const result = [];\n  let start = segments[0].start;\n  let i = start;\n  for (const segment of segments) {\n    let prevStyle, style;\n    let prev = points[start % count];\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext({type: 'segment', p0: prev, p1: pt}));\n      if (styleChanged(style, prevStyle)) {\n        result.push({start: start, end: i - 1, loop: segment.loop, style: prevStyle});\n        prevStyle = style;\n        start = i - 1;\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      result.push({start, end: i - 1, loop: segment.loop, style});\n      start = i - 1;\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { merge as $, _isPointInArea as A, _rlookupByKey as B, toPadding as C, each as D, getMaximumSize as E, _getParentNode as F, readUsedSize as G, HALF_PI as H, throttled as I, supportsEventListenerOptions as J, log10 as K, _factorize as L, finiteOrDefault as M, callback as N, _addGrace as O, PI as P, toDegrees as Q, _measureText as R, _int16Range as S, TAU as T, _alignPixel as U, renderText as V, toFont as W, _toLeftRightCenter as X, _alignStartEnd as Y, overrides as Z, _arrayUnique as _, resolve as a, _capitalize as a0, descriptors as a1, isFunction as a2, _attachContext as a3, _createResolver as a4, _descriptors as a5, mergeIf as a6, uid as a7, debounce as a8, retinaScale as a9, almostWhole as aA, almostEquals as aB, _decimalPlaces as aC, _longestText as aD, _filterBetween as aE, _lookup as aF, getHoverColor as aG, clone$1 as aH, _merger as aI, _mergerIf as aJ, _deprecated as aK, toFontString as aL, splineCurve as aM, splineCurveMonotone as aN, getStyle as aO, fontString as aP, toLineHeight as aQ, PITAU as aR, INFINITY as aS, RAD_PER_DEG as aT, QUARTER_PI as aU, TWO_THIRDS_PI as aV, _angleDiff as aW, clearCanvas as aa, _elementsEqual as ab, getAngleFromPoint as ac, _readValueToProps as ad, _updateBezierControlPoints as ae, _computeSegments as af, _boundSegments as ag, _steppedInterpolation as ah, _bezierInterpolation as ai, _pointInLine as aj, _steppedLineTo as ak, _bezierCurveTo as al, drawPoint as am, addRoundedRectPath as an, toTRBL as ao, toTRBLCorners as ap, _boundSegment as aq, _normalizeAngle as ar, getRtlAdapter as as, overrideTextDirection as at, _textX as au, restoreTextDirection as av, noop as aw, distanceBetweenPoints as ax, _setMinAndMaxByKey as ay, niceNum as az, isArray as b, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, isNullOrUndef as j, clipArea as k, listenArrayEvents as l, unclipArea as m, toPercentage as n, toDimension as o, formatNumber as p, _angleBetween as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, isNumber as w, _limitValue as x, _lookupByKey as y, getRelativePosition as z };\n","/*!\n * Chart.js v3.1.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as renderText, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as _elementsEqual, ac as getAngleFromPoint, ad as _readValueToProps, ae as _updateBezierControlPoints, af as _computeSegments, ag as _boundSegments, ah as _steppedInterpolation, ai as _bezierInterpolation, aj as _pointInLine, ak as _steppedLineTo, al as _bezierCurveTo, am as drawPoint, an as addRoundedRectPath, ao as toTRBL, ap as toTRBLCorners, aq as _boundSegment, ar as _normalizeAngle, as as getRtlAdapter, at as overrideTextDirection, au as _textX, av as restoreTextDirection, aw as noop, ax as distanceBetweenPoints, ay as _setMinAndMaxByKey, az as niceNum, aA as almostWhole, aB as almostEquals, aC as _decimalPlaces, aD as _longestText, aE as _filterBetween, aF as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[meta.vScale.id] === undefined || stacks[meta.vScale.id][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[meta.vScale.id][meta.index];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (me._data !== data) {\n      if (me._data) {\n        unlistenArrayEvents(me._data, me);\n        clearStacks(me._cachedMeta);\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const numMeta = me._cachedMeta.data.length;\n    const numData = me._data.length;\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._insertElements(this.getDataset().data.length - count, count);\n  }\n  _onDataPop() {\n    this._removeElements(this._cachedMeta.data.length - 1, 1);\n  }\n  _onDataShift() {\n    this._removeElements(0, 1);\n  }\n  _onDataSplice(start, count) {\n    this._removeElements(start, count);\n    this._insertElements(start, arguments.length - 2);\n  }\n  _onDataUnshift() {\n    this._insertElements(0, arguments.length);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    min = Math.min(min, i && Math.abs(curr - prev) || min);\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : undefined,\n        width: horizontal ? undefined : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name) {\n    const stacks = this._getStacks(datasetIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {vScale, _stacked} = me._cachedMeta;\n    const {base: baseValue, minBarLength} = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = options.skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    clipArea(chart.ctx, chart.chartArea);\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n    unclipArea(chart.ctx);\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(parsed.x);\n      const y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(parsed.y);\n      const properties = {\n        x,\n        y,\n        skip: isNaN(x) || isNaN(y)\n      };\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed.y);\n      const x = properties.x = xScale.getPixelForValue(parsed.x, i);\n      const y = properties.y = reset || nullData ? yScale.getBasePixel() : yScale.getPixelForValue(_stacked ? me.applyStack(yScale, parsed, _stacked) : parsed.y, i);\n      properties.skip = isNaN(x) || isNaN(y) || nullData;\n      properties.stop = i > 0 && (parsed.x - prevParsed.x) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    this._cachedMeta.dataset.updateControlPoints(this.chart.chartArea);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: either no adapter can be found or an incomplete integration was provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = width - padding.width;\n    const availableHeight = height - padding.height;\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && _getParentNode(container));\n  }\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) > 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right} = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n    for (i = 0; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest)\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext(0));\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    for (i = 0; i < ticksLength; ++i) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y]\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const chart = me.chart;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n    if (axisWidth) {\n      const lastLineWidth = borderOpts.lineWidth;\n      const borderValue = me._borderValue;\n      let x1, x2, y1, y2;\n      if (me.isHorizontal()) {\n        x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      drawLine(\n        {x: x1, y: y1},\n        {x: x2, y: y2},\n        {width: axisWidth, color: borderOpts.borderColor});\n    }\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || tz === gz || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = [...scopes];\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.1.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const oldRatio = me.currentDevicePixelRatio;\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    if (me.width === newSize.width && me.height === newSize.height && oldRatio === newRatio) {\n      return;\n    }\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    retinaScale(me, newRatio, true);\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasetIndex(meta, index) {\n    const metasets = this._metasets;\n    const oldIndex = meta.index;\n    if (oldIndex !== index) {\n      metasets[oldIndex] = metasets[index];\n      metasets[index] = meta;\n      meta.index = index;\n    }\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      me._updateMetasetIndex(meta, i);\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    clipArea(ctx, {\n      left: clip.left === false ? 0 : area.left - clip.left,\n      right: clip.right === false ? me.width : area.right + clip.right,\n      top: clip.top === false ? 0 : area.top - clip.top,\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n    });\n    meta.controller.draw();\n    unclipArea(ctx);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = metasets[datasetIndex] = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {visible});\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    let listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n    if (me.options.responsive) {\n      listener = (width, height) => {\n        if (me.canvas) {\n          me.resize(width, height);\n        }\n      };\n      let detached;\n      const attached = () => {\n        _remove('attach', attached);\n        me.attached = true;\n        me.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = () => {\n        me.attached = false;\n        _remove('resize', listener);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(me.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    } else {\n      me.attached = true;\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    if (!listeners) {\n      return;\n    }\n    delete me._listeners;\n    each(listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element) {\n  const {startAngle, endAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element) {\n  if (element.fullCircles) {\n    element.endAngle = element.startAngle + TAU;\n    pathArc(ctx, element);\n    for (let i = 0; i < element.fullCircles; ++i) {\n      ctx.fill();\n    }\n  }\n  if (!isNaN(element.circumference)) {\n    element.endAngle = element.startAngle + element.circumference % TAU;\n  }\n  pathArc(ctx, element);\n  ctx.fill();\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    element.endAngle = element.startAngle + TAU;\n    clipArc(ctx, element);\n    element.endAngle = endAngle;\n    if (element.endAngle === element.startAngle) {\n      element.endAngle += TAU;\n      element.fullCircles--;\n    }\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element);\n  }\n  pathArc(ctx, element);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius && distance <= outerRadius);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    const offset = options.offset || 0;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = Math.floor(me.circumference / TAU);\n    if (me.circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    if (offset && me.circumference < TAU) {\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    drawArc(ctx, me);\n    drawBorder(ctx, me);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension) {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension) {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea) {\n    const me = this;\n    const options = me.options;\n    if (options.tension && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  return {\n    topLeft: skipOrLimit(skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach((segment) => {\n    const first = linePoints[segment.start];\n    const last = linePoints[segment.end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[segment.start],\n        end: points[segment.end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        source.line.updateControlPoints(area);\n        if (options.drawTime === 'beforeDatasetsDraw') {\n          drawfill(chart.ctx, source, area);\n        }\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let top = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        top = 0;\n        currentColWidth = currentColHeight = 0;\n      }\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += fontSize + padding;\n      hitboxes[i] = {left, top, col, width: itemWidth, height: itemHeight};\n      top += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}}} = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: legendItem.textAlign\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + (fontSize / 2) + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {step, min, max, precision, count, maxTicks} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  niceMin = Math.floor(rmin / spacing) * spacing;\n  niceMax = Math.ceil(rmax / spacing) * spacing;\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  factor = Math.pow(10, isNullOrUndef(precision) ? _decimalPlaces(spacing) : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    ticks.push({value: min});\n    if (niceMin <= min) {\n      j++;\n    }\n    if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, spacing / 10)) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, spacing / 10)) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero, stacked} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero || stacked) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    if (me.isHorizontal()) {\n      return Math.ceil(me.width / 40);\n    }\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(me.height / tickFont.lineHeight);\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (isArray(label)) {\n    return {\n      w: _longestText(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  let i, textSize, pointPosition;\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = [];\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\n    const textAlign = getTextAlignForAngle(angle);\n    let left;\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - (size.w / 2);\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n    const right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign,\n      left,\n      top: pointLabelPosition.y,\n      right,\n      bottom: pointLabelPosition.y + size.h,\n    };\n  }\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= (textSize.h / 2);\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    backdropColor: 'rgba(255,255,255,0.75)',\n    backdropPadding: 2,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const options = scale.options.time;\n  const {parser, round, isoWeekday} = options;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = _lookup(table, val);\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {min, max} = me;\n    if (!timestamps.length) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    const items = [min];\n    let i, ilen, curr;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n    items.push(max);\n    return items;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index)\n      ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n","export default class ParseHelper {\n    // Able to remove commas in a string\n    static parseCurrency(input) {\n        if (!input || input === undefined || input === null) {\n            return 0;\n        }\n        if (typeof input === 'number') {\n            return input;\n        }\n        return parseFloat(input.replace(/,/g, ''));\n    }\n    static formatCurrency(input) {\n        return input.toLocaleString('en-US', {\n            maximumFractionDigits: 2\n        });\n    }\n}\n","<script lang=\"ts\">\n  import { onMount, afterUpdate, onDestroy } from 'svelte';\n  import {\n    Chart,\n    Legend,\n    Title,\n    Tooltip,\n    ArcElement,\n    DoughnutController\n  } from 'chart.js';\n  import type MonthlyArc from '../../../models/MonthlyArc';\n  import ParseHelper from '../../../utils/parse-helper';\n\n  export let arcs: MonthlyArc[];\n\n  arcs = arcs ? arcs : [];\n\n  let datasetData = convertAllToNumber(arcs.map((a) => a.amount));\n  let labels = arcs.map((a) => a.displayName);\n  let colors = arcs.map((a) => a.color);\n\n  let ctx = null;\n  let chart = null;\n  const title = 'Monthly Payment Breakdown';\n\n  onMount(() => {\n    Chart.register(ArcElement, Legend, Title, Tooltip, DoughnutController);\n\n    ctx = document.getElementById('myChart');\n    chart = createChart(datasetData);\n  });\n  afterUpdate(() => {});\n  onDestroy(() => {});\n\n  function createChart(datasetData) {\n    let data = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'Monthly Payment Breakdown',\n          data: datasetData,\n          backgroundColor: colors,\n          hoverOffset: 4\n        }\n      ]\n    };\n\n    chart = new Chart(ctx, {\n      type: 'doughnut',\n      data,\n      options: {\n        plugins: {\n          title: {\n            display: false,\n            text: title\n          },\n          legend: {\n            display: false\n          }\n        }\n      }\n    });\n\n    return chart;\n  }\n\n  function convertAllToNumber(array: Array<any>): Array<number> {\n    return array.map((el) => {\n      if (typeof el === 'number') {\n        return el;\n      } else if (typeof el === 'string') {\n        return ParseHelper.parseCurrency(el);\n      }\n\n      throw new Error('invalid type');\n    });\n  }\n\n  $: {\n    arcs = arcs;\n    let datasetData = convertAllToNumber(arcs.map((a) => a.amount));\n\n    if (chart && chart.data && chart.data.datasets) {\n      chart.data.datasets[0].data = datasetData;\n      chart.update();\n    }\n  }\n</script>\n\n<canvas id=\"myChart\" />\n","<!-- https://stackoverflow.com/questions/20966817/how-to-add-text-inside-the-doughnut-chart-using-chart-js -->\n<script lang=\"ts\">\n  import MonthlyBreakdownPieChart from './MonthlyBreakdownPieChart.svelte';\n  import ParseHelper from '../../../utils/parse-helper';\n\n  export let text;\n  export let subtext;\n  export let arcs;\n\n  text = text ? ParseHelper.formatCurrency(text) : '';\n  subtext = subtext ? subtext : '';\n</script>\n\n<div class=\"relative md:block hidden\">\n  <MonthlyBreakdownPieChart {arcs} />\n  <div\n    class=\"absolute top-1/2 left-1/2 text-center\"\n    style=\"transform: translate(-50%, -50%);\"\n  >\n    <div class=\"text-3xl\">\n      $ {text}\n    </div>\n    <div class=\"text-sm\">\n      {subtext}\n    </div>\n  </div>\n</div>\n","import { nanoid } from 'nanoid';\nexport default class MonthlyArc {\n    constructor(displayName, name, amount, color) {\n        this.id = nanoid();\n        this.displayName = displayName;\n        this.name = name;\n        this.amount = amount;\n        this.color = color;\n    }\n}\n","<script lang=\"ts\">\n  export let color: string;\n\n  color = color ? color : 'rgb(0, 0, 0)';\n</script>\n\n<div class=\"w-5 h-5\" style={`background-color: ${color};`} />\n","<script lang=\"ts\">\n  import ColorLegend from './ColorLegend.svelte';\n  import TextField from '../../TextField';\n\n  export let name: string;\n  export let color: string;\n  export let amount: number;\n  export let options;\n\n  name = name ? name : '';\n  amount = amount ? amount : 0;\n  options = options ? options : {};\n\n  options.value = amount;\n</script>\n\n<div class=\"flex items-center\">\n  <div class=\"flex flex-1 items-center\">\n    <div class=\"mr-4 md:block hidden\">\n      <ColorLegend {color} />\n    </div>\n    <div>\n      {name}\n    </div>\n  </div>\n\n  <div class=\"flex flex-1 justify-end items-center\">\n    <div class=\"mr-4\">+</div>\n    <div class=\"w-36\">\n      <TextField\n        prefix=\"$\"\n        valueType=\"currency\"\n        {options}\n        bind:inputValue={amount}\n      />\n    </div>\n  </div>\n</div>\n","<script lang=\"ts\">\n  import MonthlyBreakdownPieChartWrapper from './MonthlyBreakdownPieChartWrapper.svelte';\n  import MonthlyArc from '../../../models/MonthlyArc';\n  import PaymentItem from './PaymentItem.svelte';\n  import config from '../../../config';\n  import ParseHelper from '../../../utils/parse-helper';\n\n  const { monthlyArcColors } = config;\n\n  export let principleInterest: number;\n  export let insurance: number;\n  export let tax: number;\n  export let hoa: number;\n\n  $: total = calculateTotal(principleInterest, insurance, tax, hoa);\n\n  // $: total = principleInterest + insurance + tax + hoa;\n\n  function calculateTotal(\n    principleInterest: any,\n    insurance: any,\n    tax: any,\n    hoa: any\n  ): any {\n    principleInterest = principleInterest\n      ? ParseHelper.parseCurrency(principleInterest)\n      : 0;\n    insurance = insurance ? ParseHelper.parseCurrency(insurance) : 0;\n    tax = tax ? ParseHelper.parseCurrency(tax) : 0;\n    hoa = hoa ? ParseHelper.parseCurrency(hoa) : 0;\n\n    return principleInterest + insurance + tax + hoa;\n  }\n\n  $: getPrincipleInterestArc = function () {\n    principleInterest = principleInterest;\n    return new MonthlyArc(\n      'Principle & Interest',\n      'principleInterest',\n      principleInterest,\n      monthlyArcColors['principleInterest']\n    );\n  };\n  $: getInsuranceArc = function () {\n    insurance = insurance;\n    return new MonthlyArc(\n      'Insurance',\n      'insurance',\n      insurance,\n      monthlyArcColors['insurance']\n    );\n  };\n  $: getTaxArc = function () {\n    tax = tax;\n    return new MonthlyArc('Tax', 'tax', tax, monthlyArcColors['tax']);\n  };\n  $: getHoaArc = function () {\n    hoa = hoa;\n    return new MonthlyArc('HOA', 'hoa', hoa, monthlyArcColors['hoa']);\n  };\n  $: getArcs = function () {\n    return [\n      getPrincipleInterestArc(),\n      getInsuranceArc(),\n      getTaxArc(),\n      getHoaArc()\n    ];\n  };\n</script>\n\n<div class=\"flex\">\n  <div class=\"w-80 md:mr-8 lg:mx-24 hidden md:flex\">\n    <MonthlyBreakdownPieChartWrapper\n      arcs={getArcs()}\n      text={total}\n      subtext={'Monthly payment'}\n    />\n  </div>\n  <div class=\"flex flex-col w-full\">\n    <div class=\"flex flex-1 justify-center flex-col\">\n      <div class=\"flex-1\">\n        <h3 class=\"text-lg font-bold\">Monthly Payment Calculation</h3>\n      </div>\n      <div class=\"flex-1\">\n        <PaymentItem\n          name={'Principle & Interest'}\n          bind:amount={principleInterest}\n          color={monthlyArcColors.principleInterest}\n          options={{ readOnly: true }}\n        />\n      </div>\n      <div class=\"flex-1\">\n        <PaymentItem\n          name={'Insurance'}\n          bind:amount={insurance}\n          color={monthlyArcColors.insurance}\n        />\n      </div>\n      <div class=\"flex-1\">\n        <PaymentItem\n          name={'Tax'}\n          bind:amount={tax}\n          color={monthlyArcColors.tax}\n        />\n      </div>\n      <div class=\"flex-1 border-b\">\n        <PaymentItem\n          name={'HOA'}\n          bind:amount={hoa}\n          color={monthlyArcColors.hoa}\n        />\n      </div>\n      <div class=\"flex-1 text-right font-bold\">\n        Total monthly payment = $ {total}\n      </div>\n    </div>\n  </div>\n</div>\n","<script lang=\"ts\">\n  import ParseHelper from '../../../utils/parse-helper';\n  import dayjs from 'dayjs';\n\n  export let loan;\n  export let startMonth;\n  export let startYear;\n\n  startMonth = startMonth ? startMonth : dayjs().month();\n  startYear = startYear ? startYear : dayjs().year();\n\n  let startDate = dayjs().year(startYear).month(startMonth).add(0, 'month');\n\n  function dateForRow(i, startMonth, startYear) {\n    return startDate.add(i, 'month').format('MMM D, YYYY');\n  }\n</script>\n\n<div class=\"h-96 overflow-y-auto overflow-x-auto md:overflow-x-hidden\">\n  <table class=\"table-auto w-full\">\n    <thead>\n      <tr>\n        <th class=\"px-4 py-2\">Date</th>\n        <th class=\"px-4 py-2\">Monthly Payment</th>\n        <th class=\"px-4 py-2\">Principle</th>\n        <th class=\"px-4 py-2\">Interest</th>\n        <th class=\"px-4 py-2\">Principle Remaining</th>\n      </tr>\n    </thead>\n    <tbody>\n      {#if loan}\n        {#each loan.payments as payment, i}\n          <tr data-id={payment.id}>\n            <td class=\"border px-4 py-2\"\n              >{dateForRow(i, startMonth, startYear)}</td\n            >\n            <td class=\"border px-4 py-2\"\n              >$ {ParseHelper.formatCurrency(payment.totalPayment)}</td\n            >\n            <td class=\"border px-4 py-2\"\n              >$ {ParseHelper.formatCurrency(payment.principlePayment)}</td\n            >\n            <td class=\"border px-4 py-2\"\n              >$ {ParseHelper.formatCurrency(payment.interestPayment)}</td\n            >\n            <td class=\"border px-4 py-2\"\n              >$ {ParseHelper.formatCurrency(payment.principleRemaining)}</td\n            >\n          </tr>\n        {/each}\n      {/if}\n    </tbody>\n  </table>\n</div>\n","<script lang=\"ts\">\n  import MonthlyLevel from './MonthlyLevel';\n  import config from '../../config';\n  import AmortizationTable from './AmortizationTable/AmortizationTable.svelte';\n  const defaultAmount = config.monthlyArcAmounts;\n\n  export let insurance;\n  export let tax;\n  export let hoa;\n  export let loan;\n\n  $: principleInterest = loan ? loan.monthlyPayment : 0;\n  insurance = insurance ? insurance : defaultAmount.insurnace;\n  tax = tax ? tax : defaultAmount.tax;\n  hoa = hoa ? hoa : defaultAmount.hoa;\n</script>\n\n<div>\n  <div class=\"mb-12 px-2 md:px-4 lg:px-10 py-6 bg-white rounded-lg shadow-md\">\n    <MonthlyLevel {principleInterest} {insurance} {tax} {hoa} />\n  </div>\n  <div class=\"py-6 md:px-10 bg-white rounded-lg shadow-md\">\n    <AmortizationTable {loan} />\n  </div>\n</div>\n","<script lang=\"ts\">\n  import History from '../History';\n  import MortgageInput from '../MortgageInput';\n  import config from '../../config';\n  import DashboardContent from '../DashboardContent';\n  import { currentHistory } from '../../services/stores';\n  import amortize from 'amortizationjs';\n  const {\n    appName,\n    defaultHomePrice,\n    defaultDownPaymentPercentage,\n    defaultInterestRate,\n    defaultMortgageLength,\n    defaultPaymentCountPerYear\n  } = config;\n  let homePrice = $currentHistory\n    ? $currentHistory.homePrice\n    : defaultHomePrice;\n  let interestRate = $currentHistory\n    ? $currentHistory.interestRate\n    : defaultInterestRate;\n  let mortgageLength = $currentHistory\n    ? $currentHistory.mortgageLength\n    : defaultMortgageLength;\n  let downPaymentPercentage = $currentHistory\n    ? $currentHistory.downPayment\n    : defaultDownPaymentPercentage;\n  let downPaymentAmount = (homePrice * downPaymentPercentage) / 100;\n  $: getLoan = function () {\n    homePrice = $currentHistory ? $currentHistory.homePrice : defaultHomePrice;\n    interestRate = $currentHistory\n      ? $currentHistory.interestRate\n      : defaultInterestRate;\n    mortgageLength = $currentHistory\n      ? $currentHistory.mortgageLength\n      : defaultMortgageLength;\n    downPaymentPercentage = $currentHistory\n      ? $currentHistory.downPayment\n      : defaultDownPaymentPercentage;\n    downPaymentAmount = (homePrice * downPaymentPercentage) / 100;\n    return amortize(\n      homePrice,\n      downPaymentAmount,\n      interestRate,\n      mortgageLength,\n      defaultPaymentCountPerYear\n    );\n  };\n  let sidebarOpened: boolean = true;\n  $: overlayClass = sidebarOpened\n    ? 'fixed z-20 inset-0 bg-black opacity-50 transition-opacity lg:hidden block'\n    : 'fixed z-20 inset-0 bg-black opacity-50 transition-opacity lg:hidden hidden';\n  function closeSidebar() {\n    sidebarOpened = false;\n  }\n  function openSidebar() {\n    sidebarOpened = true;\n  }\n</script>\n\n<div class=\"flex h-screen\">\n  <div on:click={closeSidebar} class={overlayClass} />\n\n  {#if sidebarOpened}\n    <div\n      class=\"fixed z-30 inset-y-0 left-0 w-auto bg-white overflow-y-auto lg:translate-x-0 lg:static lg:inset-0 pl-2 pr-4\"\n    >\n      <div class=\"flex justify-end\">\n        <div\n          on:click={closeSidebar}\n          class=\"border border-gray-300 bg-gray-100 text-center px-2 py-1 cursor-pointer hover:border-gray-500 hover:bg-gray-200\"\n        >\n          X\n        </div>\n      </div>\n      <div class=\"flex items-center justify-center mt-8\">\n        <div class=\"flex items-center flex-col\">\n          <span class=\"text-gray-800 dark:text-white text-2xl font-semibold\">\n            {appName}\n          </span>\n\n          <div class=\"mb-8\">\n            <MortgageInput\n              homePrice={$currentHistory\n                ? $currentHistory.homePrice\n                : homePrice}\n              interestRate={$currentHistory\n                ? $currentHistory.interestRate\n                : interestRate}\n              mortgageLength={$currentHistory\n                ? $currentHistory.mortgageLength\n                : mortgageLength}\n              downPaymentPercentage={$currentHistory\n                ? $currentHistory.downPayment\n                : downPaymentPercentage}\n            />\n          </div>\n\n          <span class=\"text-gray-600 text-xl mb-4\">Previously Generated</span>\n          <History />\n        </div>\n      </div>\n\n      <div class=\"grid justify-items-center text-xs\">\n        <div>\n          <a href=\"https://github.com/serv/svelte-mortgage\" target=\"_blank\"\n            >Github</a\n          >\n        </div>\n        <div class=\"\">\n          Created by\n          <a href=\"https://twitter.com/jasoki\" target=\"_blank\">@jasoki</a>\n        </div>\n      </div>\n    </div>\n  {/if}\n\n  <div class=\"flex-1 flex flex-col overflow-hidden bg-gray-100\">\n    <header class=\"flex justify-between items-center p-6\">\n      <div class=\"flex items-center space-x-4 lg:space-x-0\">\n        {#if !sidebarOpened}\n          <div\n            on:click={openSidebar}\n            class=\"text-center px-2 py-1 cursor-pointer hover:bg-gray-200\"\n          >\n            >>\n          </div>\n        {/if}\n        <div>\n          <h1 class=\"text-2xl font-medium text-gray-800\">Overview</h1>\n        </div>\n      </div>\n    </header>\n\n    <main class=\"flex-1 overflow-x-hidden overflow-y-auto\">\n      <div class=\"container mx-auto px-2 md:px-6 py-8\">\n        <DashboardContent loan={getLoan()} />\n      </div>\n    </main>\n  </div>\n</div>\n","import App from './App.svelte';\nconst app = new App({\n    target: document.body,\n    props: {\n        name: 'world'\n    }\n});\nexport default app;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set","set_data","wholeText","set_input_value","input","select_options","select","option","selected","indexOf","__value","current_component","set_current_component","get_current_component","Error","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","get_spread_update","levels","updates","to_null_out","accounted_for","$$scope","n","undefined","bind","index","props","bound","create_component","mount_component","customElement","on_mount","m","new_on_destroy","map","filter","destroy_component","init","instance","create_fragment","not_equal","parent_component","on_disconnect","context","Map","skip_bound","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","splice","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","getHistory","historyFromLocalStorage","localStorage","getItem","JSON","parse","history","remove","id","e","setItem","stringify","mortgage","unshift","reset","get","latest","createHistory","currentId","currentHistory","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","derived","$currentId","content","color","isDiv","handleClick","className","homePrice","downPayment","interestRate","mortgageLength","baseClass","display","inputValue","contentType","firstContent","call","__awaiter","thisArg","_arguments","P","generator","present","shouldTick","v","position","selectionStart","selectionEnd","freeGlobal","global","freeSelf","self","root","Function","Symbol","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","symToStringTag","toStringTag","baseGetTag","isOwn","tag","unmasked","getRawTag","objectToString","isSymbol","isObjectLike","symbolProto","symbolToString","baseToString","array","iteratee","arrayMap","reWhitespace","reTrimStart","baseTrim","string","slice","test","charAt","trimmedEndIndex","replace","isObject","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toNumber","other","valueOf","isBinary","INFINITY","toInteger","toFinite","remainder","nativeIsFinite","isFinite","nativeMin","Math","min","func","round","number","precision","pair","split","idCounter","class","prefix","label","subtext","valueType","suffix","maximum","minimum","aValueType","validateValueType","Number","MAX_VALUE","MIN_VALUE","divId","uniqueId","inputClass","readOnly","aInputValue","MAX_FLOAT","currentValue","isInteger","parseFloat","toLocaleString","maximumFractionDigits","defaultValue","selectOptions","defaultMonth","defaultYear","apr","pow","toFixed","minAmount","maxPercentage","minPercentage","downPaymentPercentage","downPaymentAmount","calcDownPaymentAmount","reactiveDownPaymentPercentage","floor","calcReactiveDownPaymentPercentage","nanoid","size","bytes","crypto","getRandomValues","Uint8Array","byte","toUpperCase","Mortgage","startMonth","startYear","module","t","u","f","h","weekdays","months","$","String","join","z","utcOffset","abs","date","year","month","clone","ceil","M","y","w","D","ms","Q","toLowerCase","S","args","arguments","g","locale","$L","utc","$u","x","$x","$offset","$d","Date","NaN","match","substring","UTC","$y","getFullYear","$M","getMonth","$D","getDate","$W","getDay","$H","getHours","$m","getMinutes","$s","getSeconds","$ms","getMilliseconds","$utils","isValid","isSame","startOf","endOf","isAfter","isBefore","$g","unix","getTime","toDate","apply","$locale","weekStart","$set","daysInMonth","subtract","format","substr","meridiem","YY","YYYY","MM","MMM","monthsShort","MMMM","DD","dd","weekdaysMin","ddd","weekdaysShort","dddd","H","HH","hh","A","mm","ss","SSS","Z","getTimezoneOffset","diff","toJSON","toISOString","toUTCString","extend","$i","isDayjs","en","Ls","interest","principle","total","amount","digits","to_fixed_1","__importDefault","mod","__esModule","default","require$$0","Payment","totalPayment","principlePayment","interestPayment","principleRemaining","interestCumulative","rebalance","PaymentTotal_1","Payment_1","require$$1","require$$2","Calculator","calculate","loan","payments","calculatePayments","calculatePaymentTotal","monthlyPayment","getMonthlyPayment","firstEl","calculateTotal","sum","_i","_a","currentPrinciple","totalPaymentPerPeriod","years","paymentsPerYear","interestPaymentPerPeriod","principlePaid","payment","ratePerPeriod","interestPowerMultiplier","loanAmount","rate","multiplier","calculatePrinciple","powerI","Calculator_1","Loan","downPaymentRatio","calculateDownPaymentRatio","defineProperty","exports","Loan_1","amortize","appName","defaultHomePrice","defaultDownPaymentPercentage","defaultInterestRate","defaultMortgageLength","defaultPaymentCountPerYear","monthlyArcColors","principleInterest","insurance","tax","hoa","monthlyArcAmounts","insurnace","dayjs","config","homePriceNumber","replaceAll","requestAnimFrame","window","requestAnimationFrame","throttled","updateFn","updateArgs","ticking","_toLeftRightCenter","align","_alignStartEnd","end","uid","isNullOrUndef","isNumberFinite","finiteOrDefault","valueOrDefault","toDimension","dimension","endsWith","each","loopable","reverse","len","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","clone$1","source","klen","isValidKey","_merger","tval","sval","merge","sources","merger","mergeIf","_mergerIf","indexOfDotOrLength","idx","resolveObjectKey","pos","_capitalize","str","defined","isFunction","PI","TAU","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","isNumber","isNaN","toRadians","degrees","_normalizeAngle","_angleBetween","angle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","max","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInBounce","easeOutBounce","easeInOutBounce","0","1","2","3","4","5","6","7","8","9","B","C","E","F","hex","h1","h2","eq","hexString","isShort","lim","p2b","n2b","b2n","n2p","RGB_RE","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","rgb","rgb2hsl","calln","hsl2rgb","hue","hueParse","exec","p1","p2","hwb2rgb","hsv2rgb","map$1","Y","X","W","V","U","T","R","O","N","L","K","G","I","J","names","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names$1","nameParse","unpacked","tkeys","j","ok","nk","unpack","transparent","modHSL","ratio","tmp","proto","fromObject","functionParse","rgbParse","Color","_rgb","_valid","valid","hslString","weight","me","c1","c2","w2","w1","val","deg","rotate","index_esm","isPatternOrGradient","CanvasGradient","CanvasPattern","getHoverColor","saturate","darken","overrides","getScope$1","scope","defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","chart","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","describe","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","enumerable","_scriptable","startsWith","_indexable","_fallback","_measureText","gc","longest","textWidth","measureText","width","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","lineTo","SQRT1_2","rect","borderWidth","stroke","_isPointInArea","point","area","margin","left","right","top","bottom","clipArea","clip","unclipArea","renderText","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","strokeStyle","lineWidth","strokeText","maxWidth","fillText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","_readValueToProps","objProps","read","prop","toTRBLCorners","toPadding","toTRBL","toFont","fallback","console","warn","toFontString","inputs","info","cacheable","_lookup","table","cmp","mid","hi","lo","_lookupByKey","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","cache","_cacheable","_scopes","_rootScopes","_getTarget","override","Proxy","deleteProperty","_keys","_cached","proxy","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","_resolveScriptable","isIndexable","arr","item","resolver","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","resolveKeysFromAllScopes","_getParentNode","domNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","positions","getPositionedStyle","styles","getRelativePosition","evt","borderBox","boxSizing","paddings","borders","box","native","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","setTransform","supportsEventListenerOptions","passiveSupported","passive","readUsedSize","property","el","getPropertyValue","getStyle","intlCache","formatNumber","num","cacheKey","formatter","Intl","NumberFormat","getNumberFormat","getRtlAdapter","rtl","rectX","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","animator","_request","_charts","_running","_lastDate","anims","numSteps","duration","currentStep","_update","_refresh","now","remaining","running","items","draw","_active","_total","tick","_notify","charts","complete","progress","cb","_getAnims","reduce","acc","cur","_duration","cancel","interpolators","boolean","to","factor","c0","mix","Animation","cfg","_fn","_easing","easing","_start","delay","_loop","loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","res","rej","resolved","method","animationOptions","colors","properties","numbers","active","resize","show","animations","visible","hide","Animations","_chart","_properties","configure","animatedProps","getOwnPropertyNames","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","awaitAll","_animateOptions","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","vScale","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","initialize","linkScales","_stacked","addElements","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","adata","convertObjectDataToArray","isExtensible","base","object","_dataCheck","datasetElementType","resetNewElements","stackChanged","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","range","parsedValue","canStack","otherScale","_getOtherScale","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","updateRangeFromParsed","getParsed","getLabelForValue","_clip","toClip","defaultClip","getMaxOverflow","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","sharedOptions","_animationsDisabled","_resolveAnimations","getSharedOptions","_setStyle","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","DoughnutController","super","innerRadius","outerRadius","circumference","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","_getRingWeightOffset","animateRotate","getDataVisibility","calculateCircumference","animationOpts","centerX","centerY","animateScale","firstOpts","includeOptions","_circumference","updateElement","updateSharedOptions","metaData","borderAlign","hoverBorderWidth","offset","hoverOffset","ringWeightOffset","getRelativePosition$1","binarySearch","metaset","lookupMethod","_reversePixels","getRange","optimizedEvaluateItems","getSortedVisibleDatasetMetas","skip","getIntersectItems","useFinalPosition","_minPadding","inRange","getNearestItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","jlen","evaluateAllVisibleItems","legend","hidden","legendItem","toggleDataVisibility","tooltip","title","tooltipItem","dataLabel","formattedValue","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","sort","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","horizontal","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","changed","fullSize","placeBoxes","userPadding","padding","layouts","_layers","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","isHorizontal","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","createAttachObserver","observer","MutationObserver","entries","entry","addedNodes","added","observe","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","fromNativeEvent","addListener","DomPlatform","renderHeight","renderWidth","initial","displayWidth","displayHeight","initCanvas","proxies","$proxies","attach","Element","getProps","final","defaultRoutes","formatters","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","numeric","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","last","newTicks","next","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","beginAtZero","bounds","grace","grid","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","route","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","epsilon","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","suggestedMin","suggestedMax","metas","getMatchingVisibleMetas","getMinMax","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","gcLen","garbageCollect","valueAt","getPixelForValue","decimal","getBaseValue","createTickContext","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","fillRect","findIndex","_computeGridLineItems","drawLine","setLineDash","lineDashOffset","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","TypedRegistry","isPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","propertyParts","sourceName","sourceScope","parts","routeDefaults","registerDefaults","registry","controllers","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","camelMethod","PluginService","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","getPlugin","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","subPrefixes","getResolver","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","isDomSupported","getCanvas","getElementById","instances","getChart","Chart","initialCanvas","existingChart","chartOptionScopes","_initializePlatform","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","error","bindEvents","OffscreenCanvas","_resizeBeforeDraw","_resize","newSize","oldRatio","newRatio","onResize","render","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","hasUpdated","addBox","oldIndex","_destroyDatasetMeta","_dataset","newControllers","_removeUnreferencedMetasets","order","_updateMetasetIndex","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","removeBox","animsDisabled","ensureScalesHaveIDs","buildOrUpdateScales","buildOrUpdateControllers","buildOrUpdateElements","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","setDatasetVisibility","_updateDatasetVisibility","_destroy","unbindEvents","releaseContext","toDataURL","_add","_remove","detached","isAttached","activeElements","lastActive","_updateHoverStyles","notify","replay","hoverOptions","deactivated","activated","updateHoverStyle","eventFilter","_handleEvent","lastEvent","getElementsAtEventForMode","invalidatePlugins","clipArc","pixelMargin","angleMargin","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","inner","lineJoin","fullCircles","drawFullCircleBorders","version","unregister","ArcElement","chartX","chartY","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","getAngleFromPoint","halfAngle","halfRadius","drawArc","getBoxSize","labelOpts","fontSize","boxHeight","boxWidth","usePointStyle","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","hitbox","_draw","defaultColor","rtlHelper","fontColor","halfFontSize","cursor","textDirection","setWidth","lineCap","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","onLeave","isListened","hoveredItem","_getLegendItemAt","previous","sameItem","plugin_legend","_element","_args","adjustHitBoxes","handleEvent","ci","borderCapStyle","borderJoinStyle","Title","_padding","textSize","fontOpts","_drawArgs","plugin_title","titleBlock","createTitle","positioners","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","radiusAndPadding","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","plugin_tooltip","labelCount","ParseHelper","datasetData","convertAllToNumber","displayName","parseCurrency","createChart","onDestroy","important","formatCurrency","MonthlyArc","getPrincipleInterestArc","getInsuranceArc","getTaxArc","getHoaArc","getArcs","startDate","defaultAmount","$currentHistory","sidebarOpened","getLoan","overlayClass"],"mappings":"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"}